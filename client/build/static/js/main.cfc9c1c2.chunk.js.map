{"version":3,"sources":["components/PetList.js","components/PetDetails.js","components/PetForm.js","views/PetShelter/PetCreate.js","views/PetShelter/PetUpdate.js","views/PetShelter/Main.js","App.js","serviceWorker.js","index.js"],"names":["PetList","pets","style","width","border","backgroundColor","map","p","key","_id","textAlign","petName","petType","to","PetDetails","id","setPets","useState","pet","setPet","useEffect","axios","get","then","res","data","catch","err","console","log","display","justifyContent","onClick","delete","filter","navigate","adoptPet","height","fontWeight","petDescription","marginLeft","skill1","skill2","skill3","PetForm","submitPet","errors","onSubmit","e","color","undefined","message","type","value","onChange","target","margin","PetCreate","setErrors","newPet","preventDefault","post","response","PetUpdate","newList","put","Main","paddingTop","path","App","padding","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.cfc9c1c2.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Link} from '@reach/router'\r\n\r\nconst PetList = ({pets}) => {\r\n\r\n    return (\r\n        <div>\r\n            <h3>These pets are looking for a good home</h3>\r\n            <table style={{width: \"100%\", border: \"1px black solid\"}}>\r\n                <tbody>\r\n                <tr style={{backgroundColor: 'lightgray'}}>\r\n                    <th >Name</th>\r\n                    <th>Type</th>\r\n                    <th>Actions</th>\r\n                </tr>\r\n                {pets.map(p => \r\n                    <tr key={p._id} style={{textAlign: \"center\"}}>\r\n                        <td>{p.petName}</td>\r\n                        <td>{p.petType}</td>\r\n                        <td>\r\n                            <Link to={`pets/${p._id}/details`}>Details</Link>` | `\r\n                            <Link to={`pets/${p._id}/edit`}>Edit</Link>\r\n                        </td>\r\n                    </tr>\r\n                )}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\nexport default PetList;","import React,{useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport { navigate } from '@reach/router'\r\n\r\nconst PetDetails = ({id, pets, setPets}) => {\r\n\r\n    const [pet, setPet] = useState({})\r\n\r\n    useEffect(()=>{\r\n        axios.get(`http://127.0.0.1:8000/api/things/${id}/`)\r\n            .then(res => setPet(res.data))\r\n            .catch(err => console.log(err))\r\n    },[])\r\n\r\n    const adoptPet = (id) => {\r\n        axios.delete(`http://127.0.0.1:8000/api/things/${id}/delete/`)\r\n            .then(res => setPets(pets.filter(p => p._id !== id)))\r\n            .catch(err => console.log(err))\r\n        navigate('/')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\r\n                <h3>Details about: {pet.petName}</h3>\r\n                <h3>\r\n                    <button onClick={() => adoptPet(pet._id)} style={{height: \"30px\"}}>Adopt {pet.petName}</button>\r\n                </h3>\r\n            </div>\r\n            <div>\r\n                <h4>Pet Type: <span style={{fontWeight: \"lighter\"}}>{pet.petType}</span></h4>\r\n                <h4>Description: <span style={{fontWeight: \"lighter\"}}>{pet.petDescription}</span></h4>\r\n                <div style={{display: \"flex\"}}>\r\n                    <h4>Skills:</h4>\r\n                    <div style={{marginLeft: \"25px\"}}>\r\n                        <h4><span style={{fontWeight: \"lighter\"}}>{pet.skill1}</span></h4>\r\n                        <h4><span style={{fontWeight: \"lighter\"}}>{pet.skill2}</span></h4>\r\n                        <h4><span style={{fontWeight: \"lighter\"}}>{pet.skill3}</span></h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default PetDetails;","import React from 'react'\r\n\r\nconst PetForm = ({pet, setPet, submitPet, errors}) => {\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={(e) => submitPet(e,pet)} style={{width: \"100%\"}}>\r\n                <div style={{ display: \"flex\", justifyContent: \"space-between\"}}>\r\n                    <div>\r\n                        <span style={{color: 'red'}}>{errors.petName != undefined ? errors.petName.message : \"\"}</span>\r\n                        <h4 style={{display: \"flex\", justifyContent: \"space-between\"}}>\r\n                            Pet Name :  \r\n                            <input type=\"text\" value={pet.petName || ''} onChange={e=> setPet({...pet, petName: e.target.value})}/>\r\n                        </h4>\r\n                        <span style={{color: 'red'}}>{errors.petType != undefined ? errors.petType.message : \"\"}</span>\r\n                        <h4 style={{display: \"flex\", justifyContent: \"space-between\"}}>\r\n                            Pet Type :  \r\n                            <input type=\"text\" value={pet.petType || ''} onChange={e=> setPet({...pet, petType: e.target.value})}/>\r\n                        </h4>\r\n                        <span style={{color: 'red'}}>{errors.petDescription != undefined ? errors.petDescription.message : \"\"}</span>\r\n                        <h4 style={{display: \"flex\", justifyContent: \"space-between\"}}>\r\n                            Pet Description :  \r\n                            <input type=\"text\" value={pet.petDescription || ''} onChange={e=> setPet({...pet, petDescription: e.target.value})}/>\r\n                        </h4>\r\n                    </div>\r\n                    <div>\r\n                        <h4 style={{display: \"flex\", justifyContent: \"space-between\"}}>\r\n                            Skill 1 :  \r\n                            <input type=\"text\" value={pet.skill1 || ''} onChange={e=> setPet({...pet, skill1: e.target.value})}/>\r\n                        </h4>\r\n                        <h4 style={{display: \"flex\", justifyContent: \"space-between\"}}>\r\n                            Skill 2 :  \r\n                            <input type=\"text\" value={pet.skill2 || ''} onChange={e=> setPet({...pet, skill2: e.target.value})}/>\r\n                        </h4>\r\n                        <h4 style={{display: \"flex\", justifyContent: \"space-between\"}}>\r\n                            Skill 3 :  \r\n                            <input type=\"text\" value={pet.skill3 || ''} onChange={e=> setPet({...pet, skill3: e.target.value})}/>\r\n                        </h4>\r\n                    </div>\r\n                </div>\r\n                <input style={{margin: \"auto\"}} type={\"submit\"} value={\"Submit\"}/>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default PetForm;","import React, { useEffect, useState } from 'react'\r\nimport PetForm from '../../components/PetForm'\r\nimport axios from 'axios'\r\nimport {navigate} from '@reach/router'\r\n\r\nconst PetCreate = ({pets, setPets}) => {\r\n\r\n    //create pet stuff\r\n    const [pet, setPet] = useState({})\r\n    const [errors, setErrors] = useState({})\r\n    // let errors = {}\r\n    // useEffect(()=>{console.log(errors)},[errors])\r\n\r\n    const createNewPet = (e, newPet) => {\r\n        e.preventDefault();\r\n        axios.post('http://127.0.0.1:8000/api/things/new/', newPet)\r\n            .then(res => {return setPets([...pets, res.data]), navigate('/'), setErrors({})})\r\n            .catch(err => setErrors(err.response.data.errors))\r\n    }\r\n    //err.response.data.errors.petName.message\r\n\r\n    return(\r\n        <div>\r\n            <PetForm setPet={setPet} pet={pet} submitPet={createNewPet} errors={errors}/>\r\n        </div>\r\n    )\r\n}\r\nexport default PetCreate;","import React,{useEffect, useState} from 'react'\r\nimport PetForm from '../../components/PetForm'\r\nimport axios from 'axios'\r\n\r\nconst PetUpdate = ({id, pets, setPets}) => {\r\n\r\n    //create pet stuff\r\n    const [pet, setPet] = useState({})\r\n    const [errors, setErrors] = useState({})\r\n\r\n    useEffect(()=>{\r\n        axios.get(`http://127.0.0.1:8000/api/things/${id}/`)\r\n            .then(res => setPet(res.data))\r\n            .catch(err => setErrors(err.response.data))\r\n    },[])\r\n\r\n    const updatePet = (e, newPet) => {\r\n        e.preventDefault()\r\n        const newList = pets.filter(p => p._id != id)\r\n        axios.put(`http://127.0.0.1:8000/api/things/${id}/update/`, newPet)\r\n            .then((res) => setPets([...newList, res.data]),setErrors({}))\r\n            .catch(err => setErrors(err.response.data.errors))\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <PetForm pet={pet} setPet={setPet} submitPet={updatePet} errors={errors}/>\r\n        </div>\r\n    )\r\n}\r\nexport default PetUpdate;","import React,{ useState, useEffect} from 'react'\r\nimport {Router, Link} from '@reach/router'\r\nimport axios from 'axios'\r\nimport PetList from '../../components/PetList'\r\nimport PetDetails from '../../components/PetDetails'\r\nimport PetCreate from './PetCreate'\r\nimport PetUpdate from './PetUpdate'\r\n\r\nconst Main = () => {\r\n\r\n    const [pets, setPets] = useState([])\r\n    \r\n    useEffect(()=>{\r\n        axios.get(\"http://127.0.0.1:8000/api/things/\")\r\n            .then(res => setPets(res.data))\r\n            .catch(err => console.log(err))\r\n    },[])\r\n\r\n    return(\r\n        <div style={{width: \"500px\"}}>\r\n            <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\r\n                <h1>Pet Shelter</h1>\r\n                <div style={{ paddingTop: \"35px\"}}>\r\n                    <Link to={`pets/new`}>Add Pet</Link>` | `\r\n                    <Link to={`/`} >BackHome</Link>\r\n                </div>\r\n            </div>\r\n            <Router>\r\n                <PetList path='/' pets={pets}/>\r\n                <PetCreate path='pets/new/' pets={pets} setPets={setPets}/>\r\n                <PetUpdate path='pets/:id/edit' pets={pets} setPets={setPets}/>\r\n                <PetDetails path='pets/:id/details' pets={pets} setPets={setPets}/>\r\n            </Router>\r\n        </div>\r\n    )\r\n}\r\nexport default Main","import React from 'react';\n// import logo from './logo.svg';\n// import './App.css';\nimport Main from './views/PetShelter/Main'\n\nfunction App() {\n  return (\n    <div style={{padding : \"25px\"}}>\n\n      <Main/>\n\n      {/* <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header> */}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}